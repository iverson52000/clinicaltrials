{"version":3,"sources":["components/Modal/Modal.js","components/Filter/Filter.js","components/Header.js","components/Hero1.js","components/Hero2.js","components/ClinicCard.js","components/ClinicCardList.js","components/EnrollBanner.js","components/StudyPage/StudyPage.js","App.js","serviceWorker.js","index.js"],"names":["modalRoot","document","getElementById","Modal","props","el","createElement","appendChild","this","removeChild","ReactDOM","createPortal","children","Component","Filter","onFormChange","event","state","toggleModal","className","Container","onClick","Form","FormGroup","Label","for","Input","type","name","id","placeholder","CustomInput","label","tag","check","Button","Header","Hero1","Jumbotron","Hero2","Row","Col","md","ClinicCard","onViewStudy","Card","CardBody","src","alt","ClinicCardList","style","marginLeft","EnrollBanner","sm","StudyPage","onRouteChange","color","body","CardTitle","CardText","initialState","route","isFilterOpen","user","email","App","setState","prevState","loadUser","height","borderWidth","Boolean","window","location","hostname","match","httpLink","createHttpLink","uri","authLink","setContext","_","headers","token","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","query","gql","then","resp","console","log","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.62ed8053.chunk.js","sourcesContent":["import { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Modal.css';\n\nconst modalRoot = document.getElementById('modal-root');\n\nclass Modal extends Component {\n  constructor(props) {\n    super(props);\n    this.el = document.createElement('div');\n  }\n\n  componentDidMount() {\n    modalRoot.appendChild(this.el);\n  }\n\n  componentWillUnmount() {\n    modalRoot.removeChild(this.el);\n  }\n\n  render() {\n    return ReactDOM.createPortal(\n      this.props.children,\n      this.el,\n    )\n  }\n}\n\nexport default Modal;","import React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, \n\tContainer, CustomInput} from 'reactstrap';\n\nimport './Filter.css';\n\nclass Filter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n  onFormChange = (event) => {\n    // switch(event.target.name) {\n    //   case 'user-name':\n    //     this.setState({name: event.target.value})\n    //     break;\n    //   case 'user-age':\n    //     this.setState({age: event.target.value})\n    //     break;\n    //   case 'user-pet':\n    //     this.setState({pet: event.target.value})\n    //     break;\n    //   default:\n    //     return;\n    // }\n  }\n\n  render() {\n    const { toggleModal} = this.props;\n    // const { name, age, pet } = this.state;\n    return (\n      <div className='filter-modal '>\n\t\t<Container className='modal-container px-5 pb-5'>\n\t\t\t<div className=\"d-flex flex-row-reverse py-0 modal-close\" onClick={toggleModal}>&times;</div>\n\t\t\t<Form className=\"filter-form\">\n\t\t   \t  \t<h2>Filter Clinical Trials</h2>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label for=\"fullname\">Full Name</Label>\n\t\t\t\t\t<Input type=\"text\" name=\"fullname\" id=\"fullname\" placeholder=\"Full Name\" />\n\t\t\t\t</FormGroup>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label for=\"examplePassword\">Email</Label>\n\t\t\t\t\t<Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" />\n\t\t\t\t</FormGroup>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label for=\"HealthConditions\">HealthConditions</Label>\n\t\t\t\t\t<Input type=\"text\" name=\"HealthConditions\" id=\"HealthConditions\" placeholder=\"HealthConditions\" />\n\t\t\t\t</FormGroup>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label for=\"exampleCheckbox\">Biological</Label>\n\t\t\t\t<div>\n\t\t\t\t\t<CustomInput type=\"checkbox\" id=\"exampleCustomCheckbox\" label=\"All results\" />\n\t\t\t\t\t<CustomInput type=\"checkbox\" id=\"exampleCustomCheckbox2\" label=\"Female\" />\n\t\t\t\t\t<CustomInput type=\"checkbox\" id=\"exampleCustomCheckbox3\" label=\"Male\"/>\n\t\t\t\t\t<CustomInput type=\"checkbox\" id=\"exampleCustomCheckbox4\" label=\"Non-specific\"/>\n\t\t\t\t</div>\n\t\t\t\t</FormGroup>\n\t  \t\t\t<FormGroup tag=\"fieldset\">\n\t\t\t        <Label>No Placebo</Label>\n\t\t\t        <FormGroup check>\n\t\t\t          <Label check>\n\t\t\t            <Input type=\"radio\" name=\"radio1\" />{' '}\n\t\t\t            Yes\n\t\t\t          </Label>\n\t\t\t        </FormGroup>\n\t\t\t        <FormGroup check>\n\t\t\t          <Label check>\n\t\t\t            <Input type=\"radio\" name=\"radio1\" />{' '}\n\t\t\t\t\t\t      No\n\t\t\t          </Label>\n\t\t\t        </FormGroup>\n\t\t\t    </FormGroup>\n\t\t\t\t<div className=\"d-flex justify-content-center\">\n\t\t\t\t\t<Button onClick={toggleModal} className=\"btn-lg btn-danger mx-1 filter-botton\">Cancel</Button>\n\t\t\t\t\t<Button className=\"btn-lg btn-info mx-1 filter-botton\">Apply</Button>\n\t\t\t\t</div>\t\t  \n\t\t\t</Form>\n\t\t</Container>\n\n      </div>\n    );\n  }\n}\n\n\nexport default Filter;","import React from 'react';\n\n\nconst Header = () => {\n\treturn(\n\t  <div className=\"header\">\n\t  \t<h1 className=\"Clinical-Trials\">Clinical Trials</h1>\n        <p className=\"Connect-people-with\">Connect people with compensated clinical trials</p>\n\t  </div>\n\t);\n}\n\nexport default Header;","import React from 'react';\nimport { Jumbotron, Button } from 'reactstrap';\n\nconst Hero1 = ({ toggleModal }) => {\n\treturn(\n\t  <div >\n\t  \t<Jumbotron className=\"hero1\">\n\t\t  \t<div className = \"container\">\n\t\t        <h1 className=\"Find-the-best-clinic\">Find the best clinical trials near you</h1>\n\t\t        <p>Connect people with compensated clinical trials</p>\n\t\t        <p className=\"lead\">\n\t\t          <Button className=\"get-started-botton\" onClick={toggleModal}>Get Started Now</Button>\n\t\t        </p>\n\t\t    </div>\n      \t</Jumbotron>\n\t  </div>\n\t);\n}\n\nexport default Hero1;","import React from 'react';\nimport { Jumbotron, Button } from 'reactstrap';\nimport { Container, Row, Col } from 'reactstrap';\n\nconst Hero2 = () => {\n\treturn(\n\t  <div>\n\t  \t<Jumbotron className=\"hero2\">\n\t\t  \t<Container>\n\t  \t      <Row>\n\t\t        <Col md=\"8\">\n\t\t        \t<h1 className=\"Dont-miss-out-Be-t\">Don’t miss out. Be the first to know.</h1>\n\t\t\t        <p className=\"These-slots-fill-up\">These slots fill up fast. Get text notifications as soon as a new study opens near you by upgrading to a premium subscription.</p>\n\t\t\t        <p className=\"lead\">\n\t\t\t          <Button className=\"upgrade-botton\">Upgrade</Button>\n\t\t\t        </p>\n\t\t        </Col>\n\t\t        <Col>\n\t\t\t        <ul>\n\t\t\t        \t<li>Get access to other premium features</li>\n\t\t\t        \t<li>Can downgrade at anytime</li>\n\t\t\t        \t<li>Instant notifications</li>\n\t\t\t        \t<li>Studies that match your preferences</li>\n\t\t\t        \t<li>Improve enrollment chances by 30%</li>\n\t\t\t        </ul>     \t\n\t\t        </Col>\n\t\t      </Row>\n\t\t    </Container>\n      \t</Jumbotron>\n\t  </div>\n\t);\n}\n\nexport default Hero2;","import React from 'react';\nimport { Row, Col } from 'reactstrap';\nimport { Card, CardBody,Button } from 'reactstrap';\n\nimport { gql, useQuery } from '@apollo/client';\n\n// const GET_CLINICAL_TRIALS = gql`\n//   {\n// \t  me {\n// \t    _id\n// \t    userClinicalTrialQuery {\n// \t      age\n// \t    \tgenderBased\n// \t      age\n// \t      state\n// \t      zipCode\n// \t    }\n// \t    clinicalTrialsConnection {\n// \t      nodes {\n// \t        _id\n// \t        nctId\n// \t        contacted\n// \t        bookmarked\n// \t        clinicalTrialData {\n// \t          nctId\n// \t          studyName\n// \t        }\n// \t      }\n// \t    }\n// \t  }\n// \t}\n// `;\n\nconst ClinicCard = ({ onViewStudy }) => {\n\t// const { loading, error, data } = useQuery(GET_CLINICAL_TRIALS);\n\t\n\t// if (loading) return 'Loading...';\n //  \tif (error) return `Error! ${error.message}`;\n //  \t// return {data.me.id}\n //  \tconsole.log(data.me)\n\n\treturn(\n\t\t  <Card className=\"mt-2 new-study-card\">\n\n\t\t    <CardBody>\n\t\t\t\t <Row>\n\t\t\t\t    <Col className=\"my-auto\">Blood Drive</Col>\n\t\t\t\t    <Col className=\"recruiting-status my-auto\">Recruiting</Col>\n\t\t\t\t    <Col className=\"my-auto\">May 05, 7:23PM PST</Col>\n\n\t\t\t\t    <Col className=\"my-auto\">\n\t\t\t\t    \t<span className=\"estimated-compensation-1\">$500</span><br/>\n\t\t\t\t    \t<span className=\"average-user-receive\">average user receives $509.33</span>\n\t\t\t\t    </Col>\n\t\t\t\t    <Col className=\"my-auto\">\n\t\t\t\t    \t<Button className=\"view-study\" onClick={onViewStudy}>View Study</Button>\n\t\t\t\t    \t<Button className=\"rounded-circle ml-2 trash\" ><img src={\"./images/trash.svg\"} alt=\"Logo\" /></Button>\n\t\t\t\t    </Col>\n\t\t\t\t </Row>\n\t\t    </CardBody>\n\t\t  </Card>\n\t);\n}\n\nexport default ClinicCard;","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport ClinicCard from './ClinicCard';\n\n\nconst ClinicCardList = ({ onViewStudy }) => {\n\treturn(\n\t\t<Container className=\"px-0\">\n\t\t\t <Row>\n\t\t        <Col style={{marginLeft: '20px'}}>Study Name</Col>\n\t\t        <Col style={{marginLeft: '-5px'}}>Recruitment Status</Col>\n\t\t        <Col>Date/Time posted</Col>\n\t\t        <Col>Estimated Compensation</Col>\n\t\t        <Col></Col>\n\t\t     </Row>\n\t\t     <ClinicCard onViewStudy={onViewStudy}/>\n\t\t     <ClinicCard onViewStudy={onViewStudy}/>\n\t\t</Container>\n\t);\n}\n\nexport default ClinicCardList;","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Jumbotron, Button } from 'reactstrap';\n\n\nconst EnrollBanner = () => {\n\treturn(\n\t  <div >\n\t  \t<Jumbotron className=\"mt-5 enroll\">\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t \t<Col sm=\"12\" md=\"2\"></Col>\n\t\t\t        <Col sm=\"12\" md=\"3\">\n\t\t\t        \t<strong>Enroll in a Study Today</strong>\n\t\t\t        \t<br/> How it works<br/>\n\t\t\t        \t<Button className=\"enroll-button mt-3\">Get Started</Button>\n\t\t\t        </Col>\n\t\t\t        <Col sm=\"12\" md=\"2\">Enter preferences and we will find the best studies near you</Col>\n\t\t\t        <Col sm=\"12\" md=\"2\">DoNotPay will contact the study on your behalf</Col>\n\t\t\t        <Col sm=\"12\" md=\"\">Earn 100% of the cash compensation</Col>\n\t\t\t    </Row>\n\t\t\t</Container>\n      \t</Jumbotron>\n\t  </div>\n\t);\n}\n\nexport default EnrollBanner;","import React from 'react';\nimport { Row, Col, Container} from 'reactstrap';\nimport { Card,Button, CardTitle, CardText } from 'reactstrap';\nimport './StudyPage.css';\n\n\nconst StudyPage = ({ onRouteChange }) => {\n\treturn(\n\t\t<Container className=\"mt-3\">\n\t\t\t<Button color=\"link\" onClick={onRouteChange} className=\"pl-0\">Back to studies</Button>\n\t\t\t<Row>\n\t\t\t\t<Col md=\"7\">\n\t\t\t\t\t<p>Observational</p>\n\t\t\t\t\t<p className=\"study-page-title\">NCI COVID-19 in Cancer Patiencts, NCCAPS Study</p>\n\t\t\t\t\t<p className=\"mt-4 sponsered\">Sponsored by National Caner Institue (NCI)</p>\n\t\t\t\t\t<div className=\"d-flex flex-wrap left-button-container\">\n\t\t\t\t\t\t<Card className=\"left-card\">\n\t\t\t\t\t\t\t<p className=\"m-auto\">Malignant Solid Neoplasm</p>\n\t\t\t\t\t      </Card>\n\t\t\t\t\t    <Card className=\"left-card\">\n\t\t\t\t\t\t\t<p className=\"m-auto\">Malignant Solid Neoplasm</p>\n\t\t\t\t\t    </Card>\n\t\t\t\t\t    <Card className=\"left-card\">\n\t\t\t\t\t\t\t<p className=\"m-auto\">Malignant Solid Neoplasm</p>\n\t\t\t\t\t    </Card>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p className=\"mt-5 study-page-title-2\">About this study</p>\n\t\t\t\t\t<div className=\"d-flex flex-wrap left-button-container\">\n\t\t\t\t\t\t<Card className=\"left-card\">\n\t\t\t\t\t\t\t<p className=\"m-auto\">Malignant Solid Neoplasm</p>\n\t\t\t\t\t      </Card>\n\t\t\t\t\t    <Card className=\"left-card\">\n\t\t\t\t\t\t\t<p className=\"m-auto\">Malignant Solid Neoplasm</p>\n\t\t\t\t\t    </Card>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p className=\"mt-3\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor \n\t\t\t\t\t\tincididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation \n\t\t\t\t\t\tullamco laboris nisi ut aliquip ex ea commodo consequat. Read more…</p>\n\t\t\t\t\t<h3 className=\"mt-5 study-page-title-2\">Treatments available in this study</h3>\n\t\t\t\t\t<h4 className=\"mt-3 study-page-title-3\">Biospecimun Collection</h4>\n\t\t\t\t\t<p>Procedure</p>\n\t\t\t\t\t<p>Undergo collection of blood samples</p>\n\t\t\t\t\t<h4 className=\"mt-5 study-page-title-3\">Data Collection</h4>\n\t\t\t\t\t<p>Other</p>\n\t\t\t\t\t<p>Undergo collection of medical information and imgaging</p>\n\t\t\t\t</Col>\n\t\t\t\t<Col  className=\"mt-5\">\n\t\t\t\t\t<Card body className=\"study-page-card\">\n\t\t\t          <CardTitle className=\"recruting\">Recruting</CardTitle>\n\t\t\t          <Button className=\"study-page-button\">Contact now</Button>\n\t\t\t          <CardText className=\"mt-3\">Estimate Compensation $399</CardText>\n\t\t\t          <CardText>How we contact them</CardText>\n\t\t\t          <CardText className=\"mb-5\">Once you click Contact Now, DoNotPay will reach out to the hosts of the study on your behalf. \n\t\t\t          You should hear back from them by email in several business days.</CardText>\n\t\t\t        </Card>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n}\n\nexport default StudyPage;","import React, {Component} from 'react';\nimport './App.css';\n\nimport Modal from \"./components/Modal/Modal\";\nimport Filter from \"./components/Filter/Filter\";\n\nimport Header from './components/Header';\nimport Hero1 from './components/Hero1';\nimport Hero2 from './components/Hero2';\nimport ClinicCardList from './components/ClinicCardList';\nimport EnrollBanner from './components/EnrollBanner';\nimport StudyPage from './components/StudyPage/StudyPage';\n\nconst initialState = {\n  route: \"home\",\n  isFilterOpen: false,\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n  },\n};\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = initialState;\n  }\n\n  componentDidMount(){\n\n  }\n\n  onRouteChange = (route) => {\n    if (route === \"home\") {\n      this.setState({ route: \"studypage\" });\n    }\n    this.setState({ route: \"home\" });\n  };\n\n  onViewStudy= (route) => {\n    // if (route === \"home\") {\n    //   this.setState({ route: \"studypage\" });\n    // }\n    this.setState({ route: \"studypage\" });\n  };\n\n\n  toggleModal = () => {\n    this.setState((prevState) => ({\n      ...prevState,\n      isFilterOpen: !prevState.isFilterOpen,\n    }));\n  };\n\n\n  render(){\n    const {\n      route,\n      isFilterOpen,\n      user,\n    } = this.state;\n\n    return (\n      <div>\n        { route === \"home\" ? (\n            <div className = 'container'>\n              <Header />\n              {isFilterOpen && (\n                <Modal>\n                  <Filter\n                    isFilterOpen={isFilterOpen}\n                    toggleModal={this.toggleModal}\n                    user={user}\n                    loadUser={this.loadUser}\n                  />\n                </Modal>\n              )}\n              <Hero1 toggleModal={this.toggleModal}/>\n              <Hero2 />\n              <h3 className=\"study-title\">New Studies In Your Area</h3>\n              <ClinicCardList onViewStudy={this.onViewStudy}/>\n              <EnrollBanner/>\n              <hr style={{height:\"26px\", borderWidth: \"3px\"}}/>\n              <h3 className=\"mb-3 study-title\">Studies You’ve Contacted</h3>\n              <ClinicCardList onViewStudy={this.onViewStudy}/>\n              <hr style={{height:\"26px\", borderWidth: \"3px\"}} className=\"mt-5\"/>\n              <div className=\"mb-5\">\n                <h3 className=\"mb-3 study-title\">Studies You’ve Bookmarked</h3>\n                <ClinicCardList onViewStudy={this.onViewStudy}/>\n              </div>\n            </div> ) : (\n              <StudyPage onRouteChange={this.onRouteChange}/>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { ApolloProvider } from '@apollo/client';\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloClient, gql } from 'apollo-boost';\nimport { setContext } from '@apollo/client/link/context';\n\nconst httpLink = createHttpLink({\n  uri: 'https://api.donotpay.com/graphql'\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOiIyMDIxLTA5LTI0VDIwOjUyOjM2LjAxNzA4MTUxN1oiLCJpZCI6IjVmNmQwNjU1ZWZmYjFmNTM2ZTZkZDIzNiIsInBob25lIjoiIiwidXNlciI6eyJfaWQiOiI1ZjZkMDY1NWVmZmIxZjUzNmU2ZGQyMzYiLCJyb2xlcyI6W10sImVtYWlsQWRkcmVzcyI6Iml2ZXJzb241MjAwMEBnbWFpbC5jb20iLCJwYXNzd29yZCI6IiQyYSQxMCRFd0ZoQXozenJhZG9ya1kxdU83c3d1YmxmelpGTE0uVDR3Q3RCVFBtUWxEQzNaUEV4MFlHVyIsImNyZWF0ZWRBdCI6IjIwMjAtMDktMjRUMjA6NDk6MjUuMzgxWiIsInVwZGF0ZWRBdCI6IjIwMjAtMDktMjRUMjA6NDk6MjUuMzgxWiIsImJsb2NrZWQiOmZhbHNlLCJwaG9uZU51bWJlciI6IiIsInNlY3JldCI6IkZGNzJZNUtHRFJGU1REMlMiLCJwdXNoTm90aWZpY2F0aW9uVG9rZW4iOiIiLCJwbGFpZFNldHVwIjpmYWxzZSwidGFncyI6bnVsbCwic3Vic2NyaXB0aW9uQWdyZWVtZW50Q29uZmlybWF0aW9uIjpmYWxzZSwic3Vic2NyaXB0aW9uQWdyZWVtZW50Q29uZmlybWF0aW9uRGF0ZSI6bnVsbCwieWVhcmx5Q29uZmlybWF0aW9uIjpudWxsLCJjYXJkRmlyc3QiOmZhbHNlLCJjYXJkV2FpdGxpc3RKb2luZWQiOmZhbHNlLCJzdHJpcGVDdXN0b21lcklkIjpudWxsLCJzcGxpdFN1YnNjcmlwdGlvblVzZXJuYW1lIjoiIiwiY3VycmVuY3kiOiIiLCJpc0Vucm9sbGVkSW5BdXRvUHJvdGVjdCI6ZmFsc2UsImRlZmF1bHRQYXltZW50U291cmNlIjpudWxsLCJjYXJyaWVyTmFtZSI6IiIsImZvbGxvd1VwVGV4dCI6IiIsImNhcmRWaXAiOmZhbHNlLCJjdGEiOiIiLCJzaWduYXR1cmVMaW5rIjoiIiwic3Vic2NyaXB0aW9uQ2FuY2VsYWJsZSI6ZmFsc2UsInN1YnNjcmlwdGlvblVuY2FuY2VsYWJsZVJlYXNvbiI6bnVsbCwic3Vic2NyaXB0aW9uQ2FuY2VsYWJsZUF0IjpudWxsLCJzdWJzY3JpcHRpb25DYW5jZWxlZEF0IjpudWxsLCJwYXltZW50RXhlbXB0IjpmYWxzZSwid1NldHRpbmdzIjpmYWxzZSwid1VSTCI6IiIsImlPU01lbnVGZWF0dXJlcyI6bnVsbH19.3ykg5Ief254z0JIvgF-hXRqJbJOFQX2zHZ-36QQlChk\"\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n\t  authorization: token ? `Bearer ${token}` : \"\",    \n\t}\n  }\n});\n\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nclient.query({\n\tquery: gql `\n\t  \t{\n\t\t  me {\n\t\t    _id\n\t\t    userClinicalTrialQuery {\n\t\t      age\n\t\t    \tgenderBased\n\t\t      age\n\t\t      state\n\t\t      zipCode\n\t\t    }\n\t\t    clinicalTrialsConnection {\n\t\t      nodes {\n\t\t        _id\n\t\t        nctId\n\t\t        contacted\n\t\t        bookmarked\n\t\t        clinicalTrialData {\n\t\t          nctId\n\t\t          studyName\n\t\t        }\n\t\t      }\n\t\t    }\n\t\t  }\n\t\t}\n\t`\n}).then((resp) => console.log(resp))\n\n\nReactDOM.render(\n\t<React.StrictMode>\n\t  <ApolloProvider client = {client}>\n\t    <App />\n\t  </ApolloProvider>\n\t</React.StrictMode>,\n\n\tdocument.getElementById('root')\n\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}